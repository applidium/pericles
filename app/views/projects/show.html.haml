= content_for :title, "Project #{project.title}"
- content_for :page_scripts do
  = javascript_pack_tag("common/markdown.js")

#project-show
  %h1= project.title

  .flexcontainer.flexcontainer-justify-end
    = link_to t('actions.delete'), project_path(project), method: :delete, data: { confirm: 'Are you sure?' }, class: "btn btn-default h-margin" if user.can_delete? project
    = link_to t('actions.edit'), edit_project_path(project), class: "btn btn-primary" if user.can_edit? project

  %h4 Members
  %p= project.member_list

  %h4 Description
  %vue-markdown{class: 'markdown', source: project.description}

  - unless project.proxy_configuration&.target_base_url.blank?

    %h4 Proxied server
    %p= project.proxy_configuration.target_base_url

    %h4 Proxy url
    %p= project.proxy_url

  %h4 Mock Url
  = link_to project_mocks_root_url(project), project_mocks_root_url(project)

  %h4 Documentation
  .buttons
    = link_to 'JSON Schemas', project_path(project, format: 'json_schema'), class: 'btn btn-primary'
    = link_to 'Swagger',
      project_path(project, format: 'swagger'),
      class: 'btn btn-primary',
      data: { confirm: project.resource_representation_name_as_swagger_uid }
    = link_to 'Swagger with API Gateway integration',
      project_path(project, format: 'swagger', with_api_gateway_integration: true),
      class: 'btn btn-primary',
      data: { confirm: project.resource_representation_name_as_swagger_uid }


  %p
    You can put the swagger file on a server and then read it thanks to this tool

    = link_to 'Swagger viewer', 'https://koumoul.com/openapi-viewer/?url=https://koumoul.com/s/geocoder/api/v1/api-docs.json&proxy=false', class: 'space-before'


  %h4 Code Generation
  .buttons
    = link_to 'Swift', project_path(project, format: 'swift'), class: 'btn btn-primary'
    = link_to 'Kotlin', project_path(project, format: 'kotlin'), class: 'btn btn-primary'
    = link_to 'Ruby', project_path(project, format: 'ruby'), class: 'btn btn-primary'
    = link_to 'Typescript', project_path(project, format: 'typescript'), class: 'btn btn-primary'

  - if Rails.application.secrets.slack[:client_id]
    %h4 Slack
    - if project.slack_channel.present?
      %span= "Notifications sent on #{project.slack_channel}"
      = bootstrap_form_for project do |f|
        = f.hidden_field :slack_channel, value: nil
        = f.hidden_field :slack_incoming_webhook_url, value: nil
        = f.submit class: 'btn btn-danger', value: 'Disable notifications'
    - else
      %a{href: "https://slack.com/oauth/authorize?scope=incoming-webhook&client_id=#{Rails.application.secrets.slack[:client_id]}&redirect_uri=#{slack_oauth2_project_url(project)}"}
        %img{alt:'"Add to Slack"', height: 40, width: 139, src: 'https://platform.slack-edge.com/img/add_to_slack.png', srcset: 'https://platform.slack-edge.com/img/add_to_slack.png 1x, https://platform.slack-edge.com/img/add_to_slack@2x.png 2x'}
