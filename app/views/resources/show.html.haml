= content_for :title, "Resource #{resource.name}"

- content_for :page_scripts do
  = javascript_pack_tag("resource/index.js")

#resource-show
  %ol.breadcrumb
    %li
      = link_to 'Projects', projects_path
    %li
      = link_to "#{project.title}", project_path(project)
    %li
      = link_to 'Resources', project_resources_path(project)
    %li
      = resource.name

  - if flash[:error]
    .alert.alert-danger
      = flash[:error]

  .flexspace-and-bottom.margin-top-element
    %h1{id: resource.id}
      = resource.name
      - if user.can_edit? resource
        = link_to(image_tag('edit.svg'), edit_resource_project_resource_path(project, resource), 'v-if': '!manageMode')
    .flexcontainer-justify-end
      - if user.can_delete? resource
        %transition{name: "w-slide-fade"}
          = button_to("Delete", project_resource_path(project, resource),
              method: :delete,
              disabled: resource.used_in_resources.any?,
              title: resource.used_in_resources.any? ? "Used in #{resource.used_in_resources.pluck(:name).to_sentence}" : '',
              data: { confirm: 'Are you sure ?' },
              class: "btn btn-default",
              'v-if': '!manageMode')
      %transition{name: "w-slide-fade"}
        .btn.btn-default.h-margin{'@click': 'onCancelClick', 'v-if': 'manageMode'} Cancel
      %transition{name: "w-slide-fade"}
        .btn.btn-primary{'@click': 'onUpdateClick', 'v-if': 'manageMode'} Update
  %vue-markdown{class: 'markdown', source: resource.description}
  - unless resource.used_in_resources.empty?
    %p
      Used in:&nbsp
      = resource.used_in_resources_links

  %transition{name: "h-slide-fade"}
    %ul.nav.nav-pills{role: 'tablist', 'v-if': '!manageMode'}
      %li.active
        %a{href: '#pills-attributes', 'data-toggle' => "pill", role: 'tab'}
          Attributes
          %span.badge= resource.resource_attributes.count
          &nbsp& representations
          %span.badge= resource.resource_representations.count
      %li
        %a{href: '#pills-resource-instances', 'data-toggle' => "pill", role: 'tab'}
          Instances
          %span.badge{class: resource.has_invalid_mocks? ? 'invalid-instances' : ''}
            =resource.resource_instances.count
      %li
        %a{href: '#pills-routes', 'data-toggle' => "pill", role: 'tab'}
          Routes
          %span.badge=resource.routes.count

  .tab-content
    #pills-attributes.tab-pane.fade.in.active{role: 'tabpanel'}
      = render partial: 'attributes'
    #pills-resource-instances.tab-pane.fade.in{role: 'tabpanel'}
      = render partial: 'resource_instances'
    #pills-routes.tab-pane.fade.in{role: 'tabpanel'}
      = render partial: 'routes'
