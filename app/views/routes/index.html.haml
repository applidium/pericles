= content_for :title, "Routes"
- content_for :page_scripts do
  = javascript_pack_tag("common/markdown.js")

.flexspace-and-center
  %h1 Routes
  = link_to 'New Route', new_project_route_path(project), class: "btn btn-primary btn-lg" if user.can_create? Route, project: project

- if @routes_by_resource.any?
  - @resources.each do |resource|
    .routes-container
      %a{href: project_resource_path(project, resource)}
        %h4= resource.name

    .routes-sub-container
      - @routes_by_resource[resource].sort_by { |route| [route.url, route.http_method_order] }.each do |route|
        %a{class: ['route-row', ('deprecated' if route.deprecated?)], href: project_route_path(project, route)}
          %div{style: 'flex-basis: 100px'}
            %span{ class: label_class_for_http_method(route.http_method) }= route.http_method
          %div{style: 'flex-basis: 250px'}= route.url
          - if route.deprecated?
            %vue-markdown{class: 'markdown short-description', style: 'flex: 1', source: '[DEPRECATED] ' + route.deprecated}
          - else
            %vue-markdown{class: 'markdown short-description', style: 'flex: 1', source: route.description}
          %div{style: 'flex-basis: 250px'}= route.resource_representations.uniq.map(&:name).join(", ")
          - if route.responses.empty?
            %div.tool-tip{style: 'flex-basis: 50px', 'data-toggle' => "tooltip", 'data-placement' => "top", title: "No responses"}
              \/!\
          - else
            %div{style: 'flex-basis: 50px'}

- else
  %p
    %i= t('.no_route_placeholder')
